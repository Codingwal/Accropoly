//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Management/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""InGame"",
            ""id"": ""c9d2dcd3-4689-4458-95d5-3881eefa346e"",
            ""actions"": [
                {
                    ""name"": ""CameraMovement"",
                    ""type"": ""Value"",
                    ""id"": ""b9cd4200-2348-4832-87a9-7d202000a435"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraRotation"",
                    ""type"": ""Value"",
                    ""id"": ""6adf67f1-b80a-4893-9a3a-10767107b108"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraScroll"",
                    ""type"": ""Value"",
                    ""id"": ""650a702f-ebe0-4eda-853e-464cfc769ac5"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraSprint"",
                    ""type"": ""Button"",
                    ""id"": ""4165d590-83fc-42b5-b01f-8ed4529507da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Place"",
                    ""type"": ""Button"",
                    ""id"": ""4fc6073c-5444-46a7-aa50-272d23b11771"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""5c9d33a5-b5e8-4d0e-a70c-24464da5779b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""fd387708-2e9f-4e1a-a8c1-f9a69cdfb2b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shift"",
                    ""type"": ""Button"",
                    ""id"": ""930b3c14-5ee5-4255-a56c-1bb65723064d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""5e8e0e86-8435-423e-b3f9-f0101b610c55"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bbce0c02-166d-4cde-8959-95157daf22a6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3be6ec7a-656d-4937-9fc3-3d1ef56c5129"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""72d6219d-fa77-4634-a1d1-99e459c28ac9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2b4ce309-29aa-4378-8000-0b4117eb95a1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""QE"",
                    ""id"": ""ab9b0d56-01f3-40a9-8dda-6837b559ea25"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8d511c7b-7f2f-4c47-9bde-20c31e51c5fe"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ad155284-bad5-456c-8c78-13187be79fee"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Mouse scroll"",
                    ""id"": ""56e6b35a-e48b-4a16-9311-a1b1766413b2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2f747451-1ee5-4627-8ccb-907592a674ff"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ff1c794e-0863-492c-becc-798432b3a61c"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6f8afda5-2070-49f7-bede-a86d410060df"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraSprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c84c9b63-41a2-41e9-a898-798dde8cead6"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Place"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30268a4a-12b5-492e-9270-21cd2a90f891"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4292caad-9cef-48cc-91ff-bd5e1550eb1e"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96b953de-687b-4746-bd7c-b076bd07fda4"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""adb67511-4bb6-495e-8ef5-fea1bd906034"",
            ""actions"": [
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""f8ad0456-55c1-447d-84cd-6994aa99c56a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ctrl"",
                    ""type"": ""Button"",
                    ""id"": ""4ecf67ce-b982-4c85-9a83-86331ad701aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey1"",
                    ""type"": ""Button"",
                    ""id"": ""6a9e8041-d132-4cf8-b436-22d18546849d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey2"",
                    ""type"": ""Button"",
                    ""id"": ""0ac1708e-6b48-4829-8050-d5ee7f650639"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey3"",
                    ""type"": ""Button"",
                    ""id"": ""de429163-b4d4-4671-aec5-00a557042977"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey4"",
                    ""type"": ""Button"",
                    ""id"": ""8055c9fb-ded2-452c-a9ab-773942ed730b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey5"",
                    ""type"": ""Button"",
                    ""id"": ""43bb6ccf-2f7f-401f-b4db-ee6775f59356"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotkey6"",
                    ""type"": ""Button"",
                    ""id"": ""5884bfc6-11fa-4071-9e2d-4fd2f23463ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a8e8ebbe-abb6-4257-80a2-0a47962ab2f3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b4edb86-417b-4b1e-a152-b404fda3ffae"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotkey1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""082256b8-a5c3-49ac-bb2c-d60dc0f38c02"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotkey2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26ba4819-0e1b-4391-bccf-b45020c167b3"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotkey3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20aa146d-2dcb-414e-9ec5-7ef485b0a390"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotkey4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1e0d9ed-9854-4a46-abdd-d32cf5e5ccdb"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotkey5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27a71fbf-6e2d-4280-a657-2728df3e368c"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotkey6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a50f7d0-b2a2-4d25-95c5-6344f7f9d52c"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ctrl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InGame
        m_InGame = asset.FindActionMap("InGame", throwIfNotFound: true);
        m_InGame_CameraMovement = m_InGame.FindAction("CameraMovement", throwIfNotFound: true);
        m_InGame_CameraRotation = m_InGame.FindAction("CameraRotation", throwIfNotFound: true);
        m_InGame_CameraScroll = m_InGame.FindAction("CameraScroll", throwIfNotFound: true);
        m_InGame_CameraSprint = m_InGame.FindAction("CameraSprint", throwIfNotFound: true);
        m_InGame_Place = m_InGame.FindAction("Place", throwIfNotFound: true);
        m_InGame_Cancel = m_InGame.FindAction("Cancel", throwIfNotFound: true);
        m_InGame_Rotate = m_InGame.FindAction("Rotate", throwIfNotFound: true);
        m_InGame_Shift = m_InGame.FindAction("Shift", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Escape = m_UI.FindAction("Escape", throwIfNotFound: true);
        m_UI_Ctrl = m_UI.FindAction("Ctrl", throwIfNotFound: true);
        m_UI_Hotkey1 = m_UI.FindAction("Hotkey1", throwIfNotFound: true);
        m_UI_Hotkey2 = m_UI.FindAction("Hotkey2", throwIfNotFound: true);
        m_UI_Hotkey3 = m_UI.FindAction("Hotkey3", throwIfNotFound: true);
        m_UI_Hotkey4 = m_UI.FindAction("Hotkey4", throwIfNotFound: true);
        m_UI_Hotkey5 = m_UI.FindAction("Hotkey5", throwIfNotFound: true);
        m_UI_Hotkey6 = m_UI.FindAction("Hotkey6", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InGame
    private readonly InputActionMap m_InGame;
    private IInGameActions m_InGameActionsCallbackInterface;
    private readonly InputAction m_InGame_CameraMovement;
    private readonly InputAction m_InGame_CameraRotation;
    private readonly InputAction m_InGame_CameraScroll;
    private readonly InputAction m_InGame_CameraSprint;
    private readonly InputAction m_InGame_Place;
    private readonly InputAction m_InGame_Cancel;
    private readonly InputAction m_InGame_Rotate;
    private readonly InputAction m_InGame_Shift;
    public struct InGameActions
    {
        private @Controls m_Wrapper;
        public InGameActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraMovement => m_Wrapper.m_InGame_CameraMovement;
        public InputAction @CameraRotation => m_Wrapper.m_InGame_CameraRotation;
        public InputAction @CameraScroll => m_Wrapper.m_InGame_CameraScroll;
        public InputAction @CameraSprint => m_Wrapper.m_InGame_CameraSprint;
        public InputAction @Place => m_Wrapper.m_InGame_Place;
        public InputAction @Cancel => m_Wrapper.m_InGame_Cancel;
        public InputAction @Rotate => m_Wrapper.m_InGame_Rotate;
        public InputAction @Shift => m_Wrapper.m_InGame_Shift;
        public InputActionMap Get() { return m_Wrapper.m_InGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameActions set) { return set.Get(); }
        public void SetCallbacks(IInGameActions instance)
        {
            if (m_Wrapper.m_InGameActionsCallbackInterface != null)
            {
                @CameraMovement.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraMovement;
                @CameraMovement.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraMovement;
                @CameraMovement.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraMovement;
                @CameraRotation.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraRotation;
                @CameraRotation.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraRotation;
                @CameraRotation.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraRotation;
                @CameraScroll.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraScroll;
                @CameraScroll.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraScroll;
                @CameraScroll.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraScroll;
                @CameraSprint.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraSprint;
                @CameraSprint.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraSprint;
                @CameraSprint.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnCameraSprint;
                @Place.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnPlace;
                @Place.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnPlace;
                @Place.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnPlace;
                @Cancel.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnCancel;
                @Rotate.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnRotate;
                @Rotate.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnRotate;
                @Rotate.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnRotate;
                @Shift.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnShift;
                @Shift.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnShift;
                @Shift.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnShift;
            }
            m_Wrapper.m_InGameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CameraMovement.started += instance.OnCameraMovement;
                @CameraMovement.performed += instance.OnCameraMovement;
                @CameraMovement.canceled += instance.OnCameraMovement;
                @CameraRotation.started += instance.OnCameraRotation;
                @CameraRotation.performed += instance.OnCameraRotation;
                @CameraRotation.canceled += instance.OnCameraRotation;
                @CameraScroll.started += instance.OnCameraScroll;
                @CameraScroll.performed += instance.OnCameraScroll;
                @CameraScroll.canceled += instance.OnCameraScroll;
                @CameraSprint.started += instance.OnCameraSprint;
                @CameraSprint.performed += instance.OnCameraSprint;
                @CameraSprint.canceled += instance.OnCameraSprint;
                @Place.started += instance.OnPlace;
                @Place.performed += instance.OnPlace;
                @Place.canceled += instance.OnPlace;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @Shift.started += instance.OnShift;
                @Shift.performed += instance.OnShift;
                @Shift.canceled += instance.OnShift;
            }
        }
    }
    public InGameActions @InGame => new InGameActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Escape;
    private readonly InputAction m_UI_Ctrl;
    private readonly InputAction m_UI_Hotkey1;
    private readonly InputAction m_UI_Hotkey2;
    private readonly InputAction m_UI_Hotkey3;
    private readonly InputAction m_UI_Hotkey4;
    private readonly InputAction m_UI_Hotkey5;
    private readonly InputAction m_UI_Hotkey6;
    public struct UIActions
    {
        private @Controls m_Wrapper;
        public UIActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Escape => m_Wrapper.m_UI_Escape;
        public InputAction @Ctrl => m_Wrapper.m_UI_Ctrl;
        public InputAction @Hotkey1 => m_Wrapper.m_UI_Hotkey1;
        public InputAction @Hotkey2 => m_Wrapper.m_UI_Hotkey2;
        public InputAction @Hotkey3 => m_Wrapper.m_UI_Hotkey3;
        public InputAction @Hotkey4 => m_Wrapper.m_UI_Hotkey4;
        public InputAction @Hotkey5 => m_Wrapper.m_UI_Hotkey5;
        public InputAction @Hotkey6 => m_Wrapper.m_UI_Hotkey6;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Escape.started -= m_Wrapper.m_UIActionsCallbackInterface.OnEscape;
                @Escape.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnEscape;
                @Escape.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnEscape;
                @Ctrl.started -= m_Wrapper.m_UIActionsCallbackInterface.OnCtrl;
                @Ctrl.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnCtrl;
                @Ctrl.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnCtrl;
                @Hotkey1.started -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey1;
                @Hotkey1.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey1;
                @Hotkey1.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey1;
                @Hotkey2.started -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey2;
                @Hotkey2.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey2;
                @Hotkey2.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey2;
                @Hotkey3.started -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey3;
                @Hotkey3.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey3;
                @Hotkey3.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey3;
                @Hotkey4.started -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey4;
                @Hotkey4.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey4;
                @Hotkey4.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey4;
                @Hotkey5.started -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey5;
                @Hotkey5.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey5;
                @Hotkey5.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey5;
                @Hotkey6.started -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey6;
                @Hotkey6.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey6;
                @Hotkey6.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnHotkey6;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Escape.started += instance.OnEscape;
                @Escape.performed += instance.OnEscape;
                @Escape.canceled += instance.OnEscape;
                @Ctrl.started += instance.OnCtrl;
                @Ctrl.performed += instance.OnCtrl;
                @Ctrl.canceled += instance.OnCtrl;
                @Hotkey1.started += instance.OnHotkey1;
                @Hotkey1.performed += instance.OnHotkey1;
                @Hotkey1.canceled += instance.OnHotkey1;
                @Hotkey2.started += instance.OnHotkey2;
                @Hotkey2.performed += instance.OnHotkey2;
                @Hotkey2.canceled += instance.OnHotkey2;
                @Hotkey3.started += instance.OnHotkey3;
                @Hotkey3.performed += instance.OnHotkey3;
                @Hotkey3.canceled += instance.OnHotkey3;
                @Hotkey4.started += instance.OnHotkey4;
                @Hotkey4.performed += instance.OnHotkey4;
                @Hotkey4.canceled += instance.OnHotkey4;
                @Hotkey5.started += instance.OnHotkey5;
                @Hotkey5.performed += instance.OnHotkey5;
                @Hotkey5.canceled += instance.OnHotkey5;
                @Hotkey6.started += instance.OnHotkey6;
                @Hotkey6.performed += instance.OnHotkey6;
                @Hotkey6.canceled += instance.OnHotkey6;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IInGameActions
    {
        void OnCameraMovement(InputAction.CallbackContext context);
        void OnCameraRotation(InputAction.CallbackContext context);
        void OnCameraScroll(InputAction.CallbackContext context);
        void OnCameraSprint(InputAction.CallbackContext context);
        void OnPlace(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
        void OnShift(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnEscape(InputAction.CallbackContext context);
        void OnCtrl(InputAction.CallbackContext context);
        void OnHotkey1(InputAction.CallbackContext context);
        void OnHotkey2(InputAction.CallbackContext context);
        void OnHotkey3(InputAction.CallbackContext context);
        void OnHotkey4(InputAction.CallbackContext context);
        void OnHotkey5(InputAction.CallbackContext context);
        void OnHotkey6(InputAction.CallbackContext context);
    }
}
